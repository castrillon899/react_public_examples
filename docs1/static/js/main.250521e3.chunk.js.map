{"version":3,"sources":["components/AddCategory.js","components/GitGridCardItem.js","helpers/getApi.js","hooks/useFetchGitfs.js","components/GitGrid.js","App.js","index.js"],"names":["AddCategory","setcategories","useState","valueInput","setvalueInput","onSubmit","e","preventDefault","trim","length","ee","type","onChange","target","value","GitImg","object","img","url","title","className","src","alt","getApi","categoryy","a","fetch","resp","json","data","mapImg","map","id","images","downsized_medium","useFetchGitfs","category","loading","search","setSearch","useEffect","then","GitGrid","App","categories","ReactDOM","render","document","getElementById"],"mappings":"yMA0BeA,EAxBK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KAWzC,OACE,mCACE,sBAAMC,SAVW,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,4BAAYA,GAAZ,CAAgBP,OAC9BC,EAAc,MAKd,SACE,uBAAOO,KAAK,OAAOC,SAZL,SAACN,GAAD,OAAOF,EAAcE,EAAEO,OAAOC,QAYFA,MAAOX,SCL1CY,MATf,SAAgBC,GAAS,IAAD,EACCA,EAAOC,IAAtBC,EADc,EACdA,IAAKC,EADS,EACTA,MACb,OACE,sBAAKC,UAAU,yCAAf,UACE,qBAAKC,IAAKH,EAAKI,IAAKH,IACpB,4BAAIA,Q,uBCQKI,EAfH,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACPP,EADO,0FACkFM,EADlF,8BAEME,MAAMR,GAFZ,cAEPS,EAFO,gBAGUA,EAAKC,OAHf,uBAGLC,EAHK,EAGLA,KACFC,EAASD,EAAKE,KAAI,SAACd,GAAS,IACxBe,EAAsBf,EAAtBe,GAAIb,EAAkBF,EAAlBE,MAAOc,EAAWhB,EAAXgB,OACnB,MAAO,CACLD,KACAb,QACAD,IAAG,OAAEe,QAAF,IAAEA,OAAF,EAAEA,EAAQC,iBAAiBhB,QATrB,kBAYNY,GAZM,4CAAH,sDCcGK,EAXO,SAACC,GAAc,IAAD,EACNlC,mBAAS,CACnC2B,KAAM,GACNQ,SAAS,IAHuB,mBAC3BC,EAD2B,KACnBC,EADmB,KAQlC,OAHAC,qBAAU,WACRjB,EAAOa,GAAUK,MAAK,SAACZ,GAAD,OAAUU,EAAU,CAAEV,OAAMQ,SAAS,SAC1D,CAACD,IACGE,GCSMI,MAhBf,YAAgC,IAAbN,EAAY,EAAZA,SAAY,EACED,EAAcC,GAA/BnB,EADe,EACrBY,KAAWQ,EADU,EACVA,QACnB,OACE,qCACE,qBAAIjB,UAAU,oCAAd,cAAoDgB,EAApD,OACCC,GAAW,mBAAGjB,UAAU,mCAAb,qBAEZ,qBAAKA,UAAU,YAAf,SACGH,EAAIc,KAAI,SAACd,GACR,OAAO,cAAC,EAAD,CAAQA,IAAKA,GAAUA,EAAIe,aCT7B,SAASW,IAAO,IAAD,EACQzC,mBAAS,IADjB,mBACrB0C,EADqB,KACT3C,EADS,KAE5B,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BACG2C,EAAWb,KAAI,SAACK,GAAD,OACd,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,WCRxBS,IAASC,OAAO,cAACH,EAAD,IAASI,SAASC,eAAe,W","file":"static/js/main.250521e3.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst AddCategory = ({ setcategories }) => {\r\n  const [valueInput, setvalueInput] = useState(\"\");\r\n  const changeValue = (e) => setvalueInput(e.target.value);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (valueInput.trim().length > 2) {\r\n      setcategories((ee) => [...ee, valueInput]);\r\n      setvalueInput(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"text\" onChange={changeValue} value={valueInput}></input>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setcategories: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddCategory;\r\n","import React from \"react\";\r\n\r\nfunction GitImg(object) {\r\n  const { url, title } = object.img;\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={url} alt={title}></img>\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n}\r\nexport default GitImg;\r\n","const getApi = async (categoryy) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?api_key=wJP8Y15u5iTO7TAdetGix84H3RuYFeLU&q=${categoryy}&limit=2&offset=3`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n  const mapImg = data.map((img) => {\r\n    const { id, title, images } = img;\r\n    return {\r\n      id,\r\n      title,\r\n      url: images?.downsized_medium.url,\r\n    };\r\n  });\r\n  return mapImg;\r\n};\r\n\r\nexport default getApi;\r\n","import { useState, useEffect } from \"react\";\r\nimport getApi from \"../helpers/getApi\";\r\n\r\nconst useFetchGitfs = (category) => {\r\n  const [search, setSearch] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n  useEffect(() => {\r\n    getApi(category).then((data) => setSearch({ data, loading: false }));\r\n  }, [category]);\r\n  return search;\r\n};\r\n\r\nexport default useFetchGitfs;\r\n","//import React, { useEffect, useState } from \"react\";\r\nimport React from \"react\";\r\nimport GitImg from \"./GitGridCardItem\";\r\nimport useFetchGitfs from \"../hooks/useFetchGitfs\";\r\nfunction GitGrid({ category }) {\r\n  const { data: img, loading } = useFetchGitfs(category);\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn\"> {category} </h3>\r\n      {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n\r\n      <div className=\"card-grid\">\r\n        {img.map((img) => {\r\n          return <GitImg img={img} key={img.id} />;\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default GitGrid;\r\n","import React, { useState } from \"react\";\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport GitGrid from \"./components/GitGrid\";\r\n\r\nexport default function App() {\r\n  const [categories, setcategories] = useState([]);\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setcategories={setcategories} />\r\n      <hr />\r\n      <ol>\r\n        {categories.map((category) => (\r\n          <GitGrid key={category} category={category}></GitGrid>\r\n        ))}\r\n      </ol>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}